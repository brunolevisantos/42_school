#include "../include/philo.h"

int	mails = 0;
pthread_mutex_t	mutex;

void	*routine()
{	
	int i = 0;
	while (i++ < 10)
	{
		pthread_mutex_lock(&mutex);
		mails++;
		pthread_mutex_unlock(&mutex);
	}
	return (0);
}

int	main(int ac, char **av)
{
	(void) ac;
	(void) av;
	int	i;

	pthread_t th[4];
	pthread_mutex_init(&mutex, 0);
	i = 0;
	while (i < 4)
	{
		if (pthread_create(&th[i], 0, &routine, 0) != 0)
			printf("error on thrad creation\n");
		printf("thread %d sarted execution\n", i++);
	}
	i = 0;
	while (i < 4)
	{
		if (pthread_join(th[i], 0) != 0)
			printf("error on thread waiting\n");
		printf("thread %d finished execution\n", i++);
	}
	pthread_mutex_destroy(&mutex);
	printf("number of mails is %d\n", mails);
	return (0);
}